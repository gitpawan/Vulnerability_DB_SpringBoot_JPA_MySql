package com.vulboot.angulardemo.service;

import java.util.List;

import javax.persistence.EntityExistsException;
import javax.persistence.EntityNotFoundException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.vulboot.angulardemo.model.VulData;
import com.vulboot.angulardemo.repository.VulDataRepository;

@Service
public class VulDataService {
	
	private VulDataRepository vulDataRepository;
	
	@Autowired
	public VulDataService(VulDataRepository vulDataRepository) {
		this.vulDataRepository=vulDataRepository;
	}
	
	public VulData save(VulData vulData) {
		if (vulData.getId() != null && vulDataRepository.existsById(vulData.getId())) {
			throw new EntityExistsException("There is already existing entity with such ID in the database.");
		}
		
		return vulDataRepository.save(vulData);
	}
	
	public VulData update(VulData vulData) {
		if (vulData.getId() != null && !vulDataRepository.existsById(vulData.getId())) {
			throw new EntityNotFoundException("There is no entity with such ID in the database.");
		}

		return vulDataRepository.save(vulData);
	}
	public List<VulData> findAll() {
		return vulDataRepository.findAll();
	}
	
	public Object findOne(Integer id) {
		return vulDataRepository.findById(id);
	}
	
	public void delete(Integer id) {
		vulDataRepository.deleteById(id);
	}
}
